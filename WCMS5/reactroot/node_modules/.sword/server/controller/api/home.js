"use strict";

exports.__esModule = true;
exports.default = void 0;

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2;

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

const {
  get,
  controller
} = sword.Decorator;
let home = (_dec = controller('/api/home'), _dec2 = get('/count'), _dec3 = get('/online'), _dec4 = get('/carLocation'), _dec5 = get('./alarmInfo'), _dec6 = get('./alarmTopTen'), _dec(_class = (_class2 = class home extends sword.Controller {
  async count() {
    try {
      const data = {
        user: 132546,
        vehicle: 130045
      };
      this.success(data);
    } catch (error) {
      sword.logger.error(error);
      const json = {
        code: 202,
        data: []
      };
      this.fail(json);
    }
  }

  async online() {
    try {
      const data = {
        carOnlineRate: [20, 32, 31, 34, 90, 30, 20]
      };
      this.success(data);
    } catch (error) {
      sword.logger.error(error);
      const json = {
        code: 202,
        data: []
      };
      this.fail(json);
    }
  }

  async carLocation() {
    try {
      const dataArr = [];

      for (let i = 0; i < 15; i++) {
        const lat = 41 + Math.random();
        const lng = 123 + Math.random();
        const value = Math.ceil(Math.random() * 800 + 20);
        dataArr.push({
          lat,
          lng,
          value
        });
      }

      const data = {
        carLocation: dataArr
      };
      this.success(data);
    } catch (error) {
      sword.logger.error(error);
      const json = {
        code: 202,
        data: []
      };
      this.fail(json);
    }
  }

  async alarmInfo() {
    try {
      const data = {};
      this.success(data);
    } catch (error) {
      sword.logger.error(error);
      const json = {
        code: 202,
        data: []
      };
      this.fail(json);
    }
  }

  async alarmTopTen() {
    try {
      const data = {};
      this.success(data);
    } catch (error) {
      sword.logger.error(error);
      const json = {
        code: 202,
        data: []
      };
      this.fail(json);
    }
  }

}, (_applyDecoratedDescriptor(_class2.prototype, "count", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "count"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "online", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, "online"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "carLocation", [_dec4], Object.getOwnPropertyDescriptor(_class2.prototype, "carLocation"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "alarmInfo", [_dec5], Object.getOwnPropertyDescriptor(_class2.prototype, "alarmInfo"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "alarmTopTen", [_dec6], Object.getOwnPropertyDescriptor(_class2.prototype, "alarmTopTen"), _class2.prototype)), _class2)) || _class);
var _default = home;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=home.js.map