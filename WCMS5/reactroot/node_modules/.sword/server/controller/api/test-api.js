"use strict";

exports.__esModule = true;
exports.default = void 0;

var _dec, _dec2, _dec3, _dec4, _class, _class2;

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }

const {
  get,
  post,
  controller
} = sword.Decorator;
let Test = (_dec = controller('/api/test'), _dec2 = get('/get'), _dec3 = post('/post'), _dec4 = get('/error'), _dec(_class = (_class2 = class Test extends sword.Controller {
  testGet() {
    const {
      query
    } = this;
    this.success(query);
  }

  async testPost() {
    const data = await sword.service('example.find')({
      id: 1
    });
    this.success(data);
  }

  error() {
    this.throw(400, 'error');
  }

}, (_applyDecoratedDescriptor(_class2.prototype, "testGet", [_dec2], Object.getOwnPropertyDescriptor(_class2.prototype, "testGet"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "testPost", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, "testPost"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "error", [_dec4], Object.getOwnPropertyDescriptor(_class2.prototype, "error"), _class2.prototype)), _class2)) || _class);
var _default = Test;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=test-api.js.map