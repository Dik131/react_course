{
  "version": 3,
  "sources": [
    "../../../../src/utils/commonFun.js"
  ],
  "names": [
    "path",
    "require",
    "fs",
    "crypto",
    "round",
    "value",
    "module",
    "exports",
    "sleep",
    "ms",
    "Promise",
    "resolve",
    "setTimeout",
    "getNowDateTime",
    "dateObj",
    "now",
    "Date",
    "year",
    "getFullYear",
    "month",
    "getMonth",
    "day",
    "getDate",
    "hour",
    "getHours",
    "minutes",
    "getMinutes",
    "second",
    "getSeconds",
    "getUserCookierName",
    "object2base64",
    "str",
    "JSON",
    "stringify",
    "Buffer",
    "from",
    "toString",
    "base642object",
    "parse",
    "base642String",
    "string2base64",
    "getWcms4Token",
    "uid",
    "rid",
    "tokenStr",
    "encodeURIComponent",
    "desEncrypt",
    "validWcms4Token",
    "token",
    "decodeURIComponent",
    "desDecrypt",
    "result",
    "time",
    "tokenArray",
    "split",
    "length",
    "getTime",
    "parseInt",
    "key",
    "iv",
    "alg",
    "cipher",
    "createCipheriv",
    "setAutoPadding",
    "ciph",
    "update",
    "final",
    "decipher",
    "createDecipheriv",
    "txt",
    "geEvidenceDataDir",
    "root",
    "process",
    "cwd",
    "array",
    "sep",
    "push",
    "wcms5Path",
    "join",
    "splice",
    "wcms4Path",
    "existsSync",
    "mkdirSync"
  ],
  "mappings": "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",
  "sourcesContent": [
    "const path = require('path');\r\nconst fs = require('fs');\r\nconst crypto = require('crypto');\r\n\r\nfunction round(value) {\r\n    return value >= 10 ? value : `0${value}`;\r\n}\r\nmodule.exports = {\r\n    /**\r\n     * 睡眠函数-暂停 ms 后执行\r\n     * @param {number} ms 毫秒数\r\n     */\r\n    sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    },\r\n    /**\r\n     * 获取当前时间 yyyy-MM-dd HH:mm:ss\r\n     */\r\n    getNowDateTime(dateObj) {\r\n        let now = new Date();\r\n        if (dateObj) {\r\n            now = dateObj;\r\n        }\r\n        const year = now.getFullYear();\r\n        const month = now.getMonth();\r\n        const day = now.getDate();\r\n        const hour = now.getHours();\r\n        const minutes = now.getMinutes();\r\n        const second = now.getSeconds();\r\n        return `${year}-${round(month + 1)}-${round(day)} ${round(hour)}:${round(minutes)}:${round(second)}`;\r\n    },\r\n    /**\r\n     * 获取WCMSU 用户权限cookie名\r\n     */\r\n    getUserCookierName() {\r\n        return 'wcms5u';\r\n    },\r\n    /**\r\n     * 对象转base64字符串\r\n     * @param {object} value\r\n     */\r\n    object2base64(value) {\r\n        let str = JSON.stringify(value);\r\n        str = Buffer.from(str);\r\n        str = str.toString('base64');\r\n        return str;\r\n    },\r\n    /**\r\n     * base64字符串转对象\r\n     * @param {string} value\r\n     */\r\n    base642object(value) {\r\n        const str = Buffer.from(value, 'base64');\r\n        return JSON.parse(str);\r\n    },\r\n    /**\r\n     * base64转字符串\r\n     * @param {string} value\r\n     */\r\n    base642String(value) {\r\n        const str = Buffer.from(value, 'base64');\r\n        return str.toString();\r\n    },\r\n    /**\r\n     * 字符串转base64\r\n     * @param {string} value\r\n     */\r\n    string2base64(value) {\r\n        let str = Buffer.from(value);\r\n        str = str.toString('base64');\r\n        return str;\r\n    },\r\n    /**\r\n     * 获取wcms4的token\r\n     * @param uid 用户id\r\n     * @param rid 角色id\r\n     */\r\n    getWcms4Token(uid, rid) {\r\n        let tokenStr = 'wcms4.0|';\r\n        tokenStr += `${rid}|`;\r\n        tokenStr += `${uid}|`;\r\n        tokenStr += this.getNowDateTime();\r\n        return encodeURIComponent(this.desEncrypt(tokenStr));\r\n    },\r\n    /**\r\n     * 验证token\r\n     */\r\n    validWcms4Token(token) {\r\n        let tokenStr = decodeURIComponent(token);\r\n        tokenStr = this.desDecrypt(tokenStr);\r\n        const result = {\r\n            rid: null,\r\n            uid: null,\r\n            time: 0\r\n        };\r\n        const tokenArray = tokenStr.split('|');\r\n        if (tokenArray.length === 4) {\r\n            result.rid = tokenArray[1];\r\n            result.uid = tokenArray[2];\r\n            result.time = new Date().getTime() - parseInt(tokenArray[3]);\r\n        }\r\n        return result;\r\n    },\r\n    /**\r\n     * des 加密\r\n     * @param 加密字符串\r\n     */\r\n    desEncrypt(str) {\r\n        const key = Buffer.from('rogernet', 'ascii');\r\n        const iv = Buffer.from('rogernet', 'ascii');\r\n        const alg = 'des-cbc';\r\n        // encrypt\r\n        const cipher = crypto.createCipheriv(alg, key, iv);\r\n        cipher.setAutoPadding(true); // default true\r\n        let ciph = cipher.update(str, 'ascii', 'base64');\r\n        ciph += cipher.final('base64');\r\n        return ciph;\r\n    },\r\n    /**\r\n     * des 解密\r\n     * @param 解密字符串\r\n     */\r\n    desDecrypt(str) {\r\n        const key = Buffer.from('rogernet', 'ascii');\r\n        const iv = Buffer.from('rogernet', 'ascii');\r\n        const alg = 'des-cbc';\r\n\r\n        const ciph = decodeURIComponent(str);\r\n        // decrypt\r\n        const decipher = crypto.createDecipheriv(alg, key, iv);\r\n        decipher.setAutoPadding(true);\r\n        let txt = decipher.update(ciph, 'base64', 'ascii');\r\n        txt += decipher.final('ascii');\r\n\r\n        return txt;\r\n    },\r\n    /**\r\n     * 获取项目根目录\r\n     */\r\n    geEvidenceDataDir() {\r\n        const root = process.cwd();\r\n        const array = root.split(path.sep);\r\n        array.push('EvidenceData');\r\n        const wcms5Path = array.join(path.sep);\r\n        array.splice(array.length - 3, 3);\r\n        array.push('WCMS4.0');\r\n        array.push('EvidenceData');\r\n        const wcms4Path = array.join(path.sep);\r\n        if (fs.existsSync(wcms4Path)) {\r\n            return wcms4Path;\r\n        }\r\n        if (!fs.existsSync(wcms5Path)) {\r\n            fs.mkdirSync(wcms5Path);\r\n        }\r\n        return wcms5Path;\r\n    }\r\n};\r\n"
  ],
  "file": "commonFun.js"
}